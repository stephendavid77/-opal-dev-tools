# Python Hooks
- id: black
  name: Black Code Formatter
  entry: python scripts/run_black.sh # Execute with python
  language: python
  types: [python]
  args: [--config=pyproject.toml]

- id: isort
  name: Isort Import Sorter
  entry: python scripts/run_isort.sh # Execute with python
  language: python
  types: [python]
  args: [--settings-path=pyproject.toml]

- id: flake8
  name: Flake8 Linter
  entry: python scripts/run_flake8.sh # Execute with python
  language: python
  types: [python]

- id: mypy
  name: Mypy Type Checker
  entry: python scripts/run_mypy.sh # Execute with python
  language: python
  types: [python]
  # Mypy often needs a config file (mypy.ini or pyproject.toml)
  # args: [--config-file=mypy.ini]

- id: bandit
  name: Bandit Security Linter
  entry: python scripts/run_bandit.sh # Execute with python
  language: python
  types: [python]
  args: [-r, .] # Run recursively on all files

- id: pytest
  name: Run Unit Tests
  entry: python scripts/run_pytest.sh # Execute with python
  language: python
  pass_filenames: false # Run tests on all files, not just staged ones
  types: [python]

# JavaScript/TypeScript Hooks (assuming Node.js projects)
- id: eslint
  name: ESLint Linter
  entry: scripts/run_eslint.sh # Still system, as it's a shell script calling npm/eslint
  language: system
  types: [javascript]

- id: prettier
  name: Prettier Code Formatter
  entry: scripts/run_prettier.sh # Still system, as it's a shell script calling npm/prettier
  language: system
  types: [javascript, css, html, json, markdown, yaml]

# OpalSuite Architectural Checks (from architecture-checks directory)
- id: check-dependencies
  name: Check Architectural Dependencies
  entry: python architecture-checks/check_dependencies.py # Execute with python
  language: python
  additional_dependencies: ["toml"] # Add toml as a dependency
  pass_filenames: false
  types: [python]

- id: check-imports
  name: Check Architectural Imports
  entry: python architecture-checks/check_imports.py # Execute with python
  language: python
  pass_filenames: false
  types: [python]

- id: check-structure
  name: Check Architectural Structure
  entry: python architecture-checks/check_structure.py # Execute with python
  language: python
  pass_filenames: false
  types: [python]
